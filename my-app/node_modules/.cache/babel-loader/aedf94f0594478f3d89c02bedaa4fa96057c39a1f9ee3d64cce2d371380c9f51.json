{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"../../utils/api.js\";\nexport const fetchPayments = createAsyncThunk(\"payments/fetchPayments\", async () => {\n  const response = await API.get(\"/payments\");\n  return response.data;\n});\nexport const createPayment = createAsyncThunk(\"payments/createPayment\", async paymentData => {\n  const response = await API.post(\"/payments\", paymentData);\n  return response.data;\n});\nexport const updatePayment = createAsyncThunk(\"payments/updatePayment\", async ({\n  id,\n  ...paymentData\n}) => {\n  const response = await API.put(`/payments/${id}`, paymentData);\n  return response.data;\n});\nexport const deletePayment = createAsyncThunk(\"payments/deletePayment\", async id => {\n  await API.delete(`/payments/${id}`);\n  return id;\n});\nconst paymentSlice = createSlice({\n  name: \"payments\",\n  initialState: {\n    payments: [],\n    loading: false,\n    error: null\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPayments.pending, state => {\n      state.loading = true;\n    }).addCase(fetchPayments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.payments = action.payload;\n    }).addCase(fetchPayments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(createPayment.pending, state => {\n      state.loading = true;\n    }).addCase(createPayment.fulfilled, (state, action) => {\n      state.loading = false;\n      state.payments.push(action.payload);\n    }).addCase(createPayment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(updatePayment.pending, state => {\n      state.loading = true;\n    }).addCase(updatePayment.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.payments.findIndex(payment => payment._id === action.payload._id);\n      if (index !== -1) state.payments[index] = action.payload;\n    }).addCase(updatePayment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(deletePayment.pending, state => {\n      state.loading = true;\n    }).addCase(deletePayment.fulfilled, (state, action) => {\n      state.loading = false;\n      state.payments = state.payments.filter(payment => payment._id !== action.payload);\n    }).addCase(deletePayment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport default paymentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","fetchPayments","response","get","data","createPayment","paymentData","post","updatePayment","id","put","deletePayment","delete","paymentSlice","name","initialState","payments","loading","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","payment","_id","filter","reducer"],"sources":["C:/Users/Fahad/Downloads/webb/webproject/my-app/src/redux/slices/paymentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../utils/api.js\";\r\n\r\nexport const fetchPayments = createAsyncThunk(\r\n  \"payments/fetchPayments\",\r\n  async () => {\r\n    const response = await API.get(\"/payments\");\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const createPayment = createAsyncThunk(\r\n  \"payments/createPayment\",\r\n  async (paymentData) => {\r\n    const response = await API.post(\"/payments\", paymentData);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updatePayment = createAsyncThunk(\r\n  \"payments/updatePayment\",\r\n  async ({ id, ...paymentData }) => {\r\n    const response = await API.put(`/payments/${id}`, paymentData);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deletePayment = createAsyncThunk(\r\n  \"payments/deletePayment\",\r\n  async (id) => {\r\n    await API.delete(`/payments/${id}`);\r\n    return id;\r\n  }\r\n);\r\n\r\nconst paymentSlice = createSlice({\r\n  name: \"payments\",\r\n  initialState: {\r\n    payments: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPayments.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchPayments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.payments = action.payload;\r\n      })\r\n      .addCase(fetchPayments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(createPayment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(createPayment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.payments.push(action.payload);\r\n      })\r\n      .addCase(createPayment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(updatePayment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(updatePayment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const index = state.payments.findIndex(\r\n          (payment) => payment._id === action.payload._id\r\n        );\r\n        if (index !== -1) state.payments[index] = action.payload;\r\n      })\r\n      .addCase(updatePayment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(deletePayment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(deletePayment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.payments = state.payments.filter(\r\n          (payment) => payment._id !== action.payload\r\n        );\r\n      })\r\n      .addCase(deletePayment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default paymentSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}