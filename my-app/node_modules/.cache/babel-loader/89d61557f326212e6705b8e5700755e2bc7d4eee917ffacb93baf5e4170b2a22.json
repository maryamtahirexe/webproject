{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  apartments: [],\n  loading: false,\n  error: null\n};\nexport const createApartment = createAsyncThunk(\"apartments/createApartment\", async (apartmentData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/apartments\", apartmentData);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n  }\n});\nexport const getAllApartments = createAsyncThunk(\"apartments/getAllApartments\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(\"http://localhost:5000/apartments\");\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const deleteApartment = createAsyncThunk(\"apartments/deleteApartment\", async (apartmentId, {\n  rejectWithValue\n}) => {\n  try {\n    await axios.delete(`http://localhost:5000/apartments/${apartmentId}`);\n    return apartmentId;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updateApartment = createAsyncThunk(\"apartments/updateApartment\", async ({\n  apartmentId,\n  updatedData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.put(`http://localhost:5000/apartments/${apartmentId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst apartmentSlice = createSlice({\n  name: \"apartments\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createApartment.pending, state => {\n      state.loading = true;\n    }).addCase(createApartment.fulfilled, (state, action) => {\n      state.loading = false;\n      state.apartments.push(action.payload);\n    }).addCase(createApartment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(getAllApartments.pending, state => {\n      state.loading = true;\n    }).addCase(getAllApartments.fulfilled, (state, action) => {\n      state.loading = false;\n      state.apartments = action.payload;\n    }).addCase(getAllApartments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(deleteApartment.pending, state => {\n      state.loading = true;\n    }).addCase(deleteApartment.fulfilled, (state, action) => {\n      state.loading = false;\n      state.apartments = state.apartments.filter(apartment => apartment._id !== action.payload);\n    }).addCase(deleteApartment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(updateApartment.pending, state => {\n      state.loading = true;\n    }).addCase(updateApartment.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.apartments.findIndex(apartment => apartment._id === action.payload._id);\n      if (index !== -1) {\n        state.apartments[index] = action.payload;\n      }\n    }).addCase(updateApartment.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default apartmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","apartments","loading","error","createApartment","apartmentData","rejectWithValue","response","post","console","log","data","_error$response","_error$response$data","message","getAllApartments","_","get","deleteApartment","apartmentId","delete","updateApartment","updatedData","put","apartmentSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","filter","apartment","_id","index","findIndex","reducer"],"sources":["C:/Users/Fahad/Downloads/webb/webproject/my-app/src/redux/slices/apartmentSlice/apartmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  apartments: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const createApartment = createAsyncThunk(\r\n  \"apartments/createApartment\",\r\n  async (apartmentData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/apartments\",\r\n        apartmentData\r\n      );\r\n      console.log(response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAllApartments = createAsyncThunk(\r\n  \"apartments/getAllApartments\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/apartments\");\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteApartment = createAsyncThunk(\r\n  \"apartments/deleteApartment\",\r\n  async (apartmentId, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/apartments/${apartmentId}`);\r\n      return apartmentId;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateApartment = createAsyncThunk(\r\n  \"apartments/updateApartment\",\r\n  async ({ apartmentId, updatedData }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:5000/apartments/${apartmentId}`,\r\n        updatedData\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst apartmentSlice = createSlice({\r\n  name: \"apartments\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createApartment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(createApartment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.apartments.push(action.payload);\r\n      })\r\n      .addCase(createApartment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(getAllApartments.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getAllApartments.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.apartments = action.payload;\r\n      })\r\n      .addCase(getAllApartments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(deleteApartment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(deleteApartment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.apartments = state.apartments.filter(\r\n          (apartment) => apartment._id !== action.payload\r\n        );\r\n      })\r\n      .addCase(deleteApartment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(updateApartment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(updateApartment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const index = state.apartments.findIndex(\r\n          (apartment) => apartment._id === action.payload._id\r\n        );\r\n        if (index !== -1) {\r\n          state.apartments[index] = action.payload;\r\n        }\r\n      })\r\n      .addCase(updateApartment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default apartmentSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}